buildscript {
  repositories {
    mavenLocal()
    jcenter()
  }
}

plugins {
 id "com.github.johnrengelman.shadow" version "5.2.0"
  id "com.jfrog.bintray" version "1.8.4"
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'com.foilen'
version = System.getenv('VERSION')?:'master-SNAPSHOT'

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
  maven {
  	url 'https://dl.bintray.com/foilen/maven'
  }
}

sourceCompatibility = 1.11

eclipse {
  classpath {
    downloadSources = true
    downloadJavadoc = true
  }
}

configurations {
  testCompile.extendsFrom compileOnly
}

dependencies {
  compile ("com.foilen:database-tools:$foilenDatabaseToolsVersion") { transitive = false }
  compile ("org.shredzone.acme4j:acme4j-client:$acme4jVersion")
  compile ("org.shredzone.acme4j:acme4j-utils:$acme4jVersion")
  
  compileOnly "com.foilen:foilen-infra-system-core-system-fake:$foilenInfraSystemVersion"
  
  testCompileOnly 'junit:junit:4.12'
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
  testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junitVersion"
}

test {
  useJUnitPlatform()
}

shadowJar {
  configurations = [project.configurations.compile]
  
  classifier = null
  
  dependencies {
    exclude(dependency('org.slf4j:slf4j-api:1.7.26'))
    exclude(dependency('org.bouncycastle:bcprov-jdk15on:1.61'))
    exclude(dependency('org.bouncycastle:bcpkix-jdk15on:1.61'))
  }
  
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')

  publish = true

  pkg {
    repo = 'maven'
    userOrg = 'foilen'
    name = 'com.foilen:foilen-infra-plugins-core'
    licenses = ['MIT']
    vcsUrl = 'https://github.com/foilen/foilen-infra-plugins-core.git'
  }

  publications = ['MyPublication']
}

task outputVersion {
  doLast {
    mkdir("$buildDir/resources/main/")
    file("$buildDir/resources/main/foilen-infra-plugins-core.txt").text = "$version"
  }
}
processResources.dependsOn outputVersion

install.dependsOn shadowJar
bintrayUpload.dependsOn shadowJar

publishing {
  publications {
    MyPublication(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact javadocJar
      groupId 'com.foilen'
      artifactId 'foilen-infra-plugins-core'
    }
  }
}
